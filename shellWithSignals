#include <ncurses.h>
#include <stdio.h>
#include <iostream>
#include <string>
#include <fstream>
#include <cstring>
#include <stdlib.h>
#include <unistd.h>
#include <limits.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <signal.h>

using namespace std;

void h_sigstop (int sig)
{
	cout << "Never happens " << sig << endl;
}

void h_sigcont (int sig)
{
	cout << "Huh? what? " << sig << endl;
}


void slowTen()
{	
	cout << "Running as PID= " << getpid() << endl;
	signal(SIGCONT, h_sigcont);
	signal(SIGSTOP, h_sigstop);
	
	for ( int i = 0; i < 10; i++)
	{
		cout << i << endl;
		if ( i == 5)
		{
			kill(getpid(), SIGSTOP);
		}
		sleep(2);
	}
}

void checkID()
{
	int status;
	pid_t pid = waitpid(-1, &status, WNOHANG);
	if ( pid < 0  && errno != ECHILD)
	{
		cerr << "Wait failed" << endl;
	}
	else
	{
		if( pid > 0 )
		{
			cout << pid << " finished with " << WEXITSTATUS(status) << endl;
		}
	}
}

int main(int argc, char *argv[])
{
        string input;
		
		
		
		string parsed[10];
        while(input != "1")
        {
                cout << "1730sh:~/cs1730/Allen-Torell-p4/";
                cout << "$";
				getline(cin, input);
				
				int stringCounter = 0;
				string subString = "";
				int quoteCounter = 0;
				int quoteCheck = 0;
				
				for ( int i = 0; i < input.length(); i++)
				{
					if ( input[i] == '"')
					{
						quoteCounter++;
					}
				}
				
				for ( int i = 0; i < input.length(); i ++ )
				{
					
					if ( input[i] == '"' || quoteCheck == 1)
					{
						subString.push_back(input[i]);
						if ( input[i] == '"')
						{
							quoteCounter--;
						}
						quoteCheck = 1;
						if ( quoteCounter == 0 || i == input.length()-1)
						{
							parsed[stringCounter] = subString;
							stringCounter++;
							subString = "";
							quoteCheck = 0;
						}
					}
					else
					{
					
						if ( input[i] == ' ' || i == input.length()-1)
						{
							
							if ( i == input.length()-1)
							{
								subString.push_back(input[i]);
							}
							
							
							parsed[stringCounter] = subString;
							stringCounter ++;
							subString = "";
						}
						else
						{
							subString.push_back(input[i]);
						}
					}
				
				}
				
				for ( int i = 0; i < stringCounter; i ++ )
				{
					cout << parsed[i] << endl;
				}
				
				
				int pid;
				
				pid = fork();
				
				if ( pid < 0)
				{
					cerr << "fork failed!" << endl;
				}
				else
				{
					if ( pid > 0)
					{
						cout << "Started pid: " << pid << endl;
					}
					else
					{
				
						if ( parsed[0].compare("count") == 0 )
						{
							slowTen();
						}
						else
						{
							cout << "hello world" << endl;
						}
					}
				}
				
				checkID();
				
				
				fill_n(parsed, 10, 0);
        }
}
